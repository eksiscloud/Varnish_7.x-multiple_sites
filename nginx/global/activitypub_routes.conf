# -------------------------------
# ActivityPub ja Fediverse -reitit
# -------------------------------

# 1. Answers, that doesn't go to backend
# *but* if they goes, i.e. Friendica is in use, comment below and use proxy_pass

# Paths of Friendica (i.e. /api/v1/instance/, /api/v1/instance/activity)
location ~ ^/api/v1/instance(/.*)?$ {
    access_log off;
    log_not_found off;
    return 404;
}

# Friends plugin of Wordpress gets these when some Mastodon apps are asking
location ~ ^/api/v2/instance(/.*)?$ {
    access_log off;
    log_not_found off;
    return 404;
}

# Friendica asks this streaming API (i.e. /api/v1/streaming/public)
location ~ ^/api/v1/streaming(/.*)?$ {
    access_log off;
    return 204;
}

# Really old Friendica/fediverse endpoint, not in real use anymore
location = /main/salmon {
    access_log off;
    log_not_found off;
    return 404;
}

# Gives data of your node, needed
#location ~ ^/nodeinfo/.* {
#    access_log off;
#    log_not_found off;
#    return 404;
#}

# Tells users, very much needed
#location = /webfinger {
#    access_log off;
#    log_not_found off;
#    return 404;
#}

# Safari/macOS push-unsubscribe (ei tueta, hiljennetään)
location = /api/v1/push/subscription {
    access_log off;
    return 204;
}

# Androidin WebAPK-testi (hiljennetään, ei käytössä)
location = /.well-known/assetlinks.json {
    access_log off;
    return 204;
}

# Googlen liikennekysely (esim. Chrome tai Lighthouse)
location = /.well-known/traffic-advice {
    default_type application/json;
    return 200 '{}';
}

# Friendican Portable Contacts (ei käytössä)
location = /poco {
    access_log off;
    log_not_found off;
    return 404;
}

# Muita turhia API-reittejä joita ei tueta (Friendica/Mastodon)
location ~ ^/api/v1/(accounts|directory|timelines|custom_emojis|tags|lists|polls)(/.*)?$ {
    access_log off;
    log_not_found off;
    return 404;
}

# -------------------------------
# Actual ActivityPub routes → backend
# -------------------------------

# Commented, because I don`t use Friends plugin of WordPress any more, no need for backend
#location ^~ /api/v1/ {
#    proxy_pass http://127.0.0.1:8080;
#    proxy_set_header Host $host;
#    proxy_set_header X-Real-IP $remote_addr;
#}
#location ^~ /api/v2/ {
#    proxy_pass http://127.0.0.1:8080;
#    proxy_set_header Host $host;
#    proxy_set_header X-Real-IP $remote_addr;
#}

# ActivityPub routes (.well-known, webfinger, nodeinfo)
location ^~ /.well-known/ {
    proxy_pass http://127.0.0.1:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
}

# WordPress REST API (needed for i.e. ActivityPub and other headless-searching)
location ^~ /wp-json/ {
    proxy_pass http://127.0.0.1:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
}

